# steps:
# - name: 'docker.io/library/docker:latest'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#     # Install Docker Compose
#     # curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#     # chmod +x /usr/local/bin/docker-compose

#     # Run the ZAP Full Scan on example.com
#     docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py \
#     -t https://www.example.com -g gen.conf -r testreport.html


steps:
- name: 'docker.io/library/docker:latest'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    # Run the ZAP Full Scan on example.com and generate a JSON report
    docker run -t -v "$(pwd)/zap-report:/zap/wrk" owasp/zap2docker-stable zap-full-scan.py -t https://www.example.com -J report.json -w /zap/wrk/

- name: 'docker.io/library/docker:latest'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
    # Install zap-cli
    apt-get update
    apt-get install -y python3-pip
    pip3 install --user zapcli

    # Convert the JSON report to HTML using zap-cli
    zap-cli report -f html -o report.html -i "$(pwd)/zap-report/report.json"

- name: 'gcr.io/cloud-builders/gsutil'
  args:
  - 'cp'
  - '$(pwd)/zap-report/report.html'
  - 'gs://dumdumareport.html'
artifacts:
  objects:
    location: 'gs://dumduma/report.json'
    paths: ['zap-report/report.json']
