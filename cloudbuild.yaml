steps: 
  # Install OpenVAS in GCP DevSecOps Pipeline 
  - name: 'ubuntu'
    entrypoint: bash
    args: 
      - '-c'
      - |-
        apt-get update
        apt-get -y install software-properties-common
        add-apt-repository ppa:mrazavi/gvm
        apt-get update
        apt-get -y install gvm
        gvm-setup
    id: Install OpenVAS
    
  # Run Vulnerability Scan using OpenVAS in GCP DevSecOps Pipeline 
  - name: 'ubuntu'
    entrypoint: bash
    args: 
      - '-c'
      - |-
        gvm-start
        gvm-stop
        gvm-manage-certs -af
        gvm-manage-certs -ac
        gvm-check-setup
        gvmd --create-user=admin --role=Admin
        gvmd --user=admin --new-password=yourpassword
        gvmd --get-users
        gvm-cli socket --xml "<create_target><name>My Target</name><hosts>companies.jbcl.cloud</hosts></create_target>"
        gvm-cli socket --xml "<create_task><name>My Task</name><target id=\"<<target_id>>\"/><config id=\"<<config_id>>\"/></create_task>"
        gvm-cli socket --xml "<get_tasks/>"
        gvm-cli socket --xml "<start_task task_id=\"<<task_id>>\"/>"
        sleep 5m
        gvm-cli socket --xml "<get_reports report_id=\"<<report_id>>\" format_id=\"<<format_id>>\"/>" --output=../openvas_report.html
    id: Vulnerability Scan using OpenVAS
    
  # Store Reports Generated by OpenVAS in GCP Cloud Bucket 
  artifacts:
    objects:
      location: 'gs://dumduma'
      paths:
        - openvas_report.html
