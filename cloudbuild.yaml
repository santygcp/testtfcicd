# steps:
# - name: 'docker.io/library/docker:latest'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#     # Install Docker Compose
#     # curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#     # chmod +x /usr/local/bin/docker-compose

#     # Run the ZAP Full Scan on example.com
#     docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py \
#     -t https://www.example.com -g gen.conf -r testreport.html



steps:

- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '--name', 'zap-proxy-container', '-d', '-p', '8090:8090', 'gcr.io/mystic-pagoda-369007/my-zap-image:latest']
  id: 'start_zap_proxy_container'

- name: 'gcr.io/cloud-builders/docker'
  args: ['run', '-t', '-v', '$PWD/output:/zap/wrk', '--network=host', 'owasp/zap2docker-stable', 'zap-full-scan.py', '-t', 'https://www.example.com', '-r', 'full-scan-report.html']
  id: 'run_zap_proxy_scan'

- name: 'gcr.io/cloud-builders/docker'
  args: ['cp', 'zap-proxy-container:/zap/wrk/full-scan-report.html', '$PWD/output']
  id: 'copy_scan_results'

- name: 'gcr.io/cloud-builders/docker'
  args: ['stop', 'zap-proxy-container']
  id: 'stop_zap_proxy_container'

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '$PWD/output/full-scan-report.html', 'gs://dumduma/full-scan-report.html']
  id: 'upload_scan_results_to_gcs'


