steps: 
  # Install OpenVAS in GCP DevSecOps Pipeline 
  - name: 'ubuntu'
    entrypoint: bash
    args: 
      - '-c'
      - |-
        apt-get update
        apt-get -y install software-properties-common
        add-apt-repository ppa:mrazavi/openvas
        apt-get update
        apt-get -y install openvas9
    id: Install OpenVAS
    
  # Run Vulnerability Scan using OpenVAS in GCP DevSecOps Pipeline 
  - name: 'ubuntu'
    entrypoint: bash
    args: 
      - '-c'
      - |-
        /etc/init.d/openvas-scanner restart
        /etc/init.d/openvas-manager restart
        openvasmd --create-user=admin --role=Admin
        openvasmd --user=admin --new-password=yourpassword
        openvasmd --get-users
        openvasmd --get-scanners
        openvasmd --get-alerts
        openvasmd --get-tasks
        openvasmd --get-reports
        openvasmd --delete-scanner=08b69003-5fc2-4037-a479-93b440211c73
        openvasmd --create-scanner='My Scanner' --scanner-host=192.168.0.1 --scanner-port=9391
        openvasmd --get-scanners
        openvasmd --create-target='My Target' --hosts=companies.jbcl.cloud
        openvasmd --get-targets
        openvasmd --create-task='My Task' --target='My Target' --scanner='My Scanner'
        openvasmd --start-task=My Task
        sleep 5m
        openvasmd --get-tasks
        openvasmd --get-reports --filter='first=1;rows=1;sort-reverse=true' --format-id=9476777a-22ff-422f-9a8d-4b1e3e4dc4d4 --report-id=<<report_id>> --output-file='../openvas_report.html'
    id: Vulnerability Scan using OpenVAS
    
  # Store Reports Generated by OpenVAS in GCP Cloud Bucket 
artifacts:
    objects:
      location: 'gs://dumduma'
      paths:
        - openvas_report.html
