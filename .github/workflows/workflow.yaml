name: 'Terraform CI'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest
    - name: Authenticate with GCP
      run: gcloud auth  santytest@global-mobility-services.iam.gserviceaccount.com --key-file=${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
    - name: Set the project
      run: gcloud config set project  global-mobility-services
    - name: Initialize Terraform
      run: terraform init
    - name: Create execution plan
      run: terraform plan
      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
    - name: Authenticate with GCP
      run: gcloud auth  santytest@global-mobility-services.iam.gserviceaccount.com --key-file=${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
     